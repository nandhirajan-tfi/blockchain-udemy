- What is Ethereum
- How do interact with Ethereum
- Tooling, Deployment, Testing of Apps with Ethereum
- Building a multi-page App with Ethereum

Smart Contract
- Set of instructions to interact with Ethereum
- An entity that can send and receive Ethereum

Whitepapers
- Bitcoin https://bitcoin.org/bitcoin.pdf
- Ethereum http://web.archive.org/web/20131228111141/http://vbuterin.com/ethereum.html

What is Ethereum
- Transfer of money through network and store data
- Different Ethereum Networks
  - TestNet -> For Testing
  - Can create our own Ethereum Network
- Network are formed by one or more nodes. Each node is a machine running Ethereum Client
- Each node has full copy of a Blockchain
- Blockchain is a database that stores a record of every transaction

Interfacing with Ethereum Networks
- Developers use web3.js
- Consumers use Metamask

Metamask
- Account Address
- Public Key
- Private Key

Account Address -> Common across all networks
Public Key + Private Key -> Combines together to form the password. Used to authorize funds sending from the account to other account

Receiving Ethereum
Project URL - https://rinkeby-faucet.com/
Steps
 - Get the wallet address from client
 - Send the address to backend server
 - Server use web3 library to create a transaction
 - Server send the transaction object to Rinkeby test network
 - Server wait for the transaction to be confirmed
 - Send success message to client
 
 What is Transaction
 - Transaction will not communicate with entire network. It will always go to one node. That node will communicate with other nodes in network
 - Node has the blockchains internally
 - Will accept multiple transactions at same time. Combining all these transactions are block
 - Node will validate the block. This process is called mining
 
 Gas Free - Amount of Ether paid for processing the transaction
 Start Gas / Gas Limit - Uni of Gas this transaction can consume
 v,r,s 
  - Generated from Sender's private key to get Sender's account address
  - With private key, we can generate v,r,s. Other way is not possible
 
Blockchain Demo
https://andersbrownworth.com/blockchain/hash

Block Time
- Time to find a solution by increasing Nonce to get different Hash is Block Time
- When one node find the solution, it will distribute the result to other nodes across the network.
- Target Block Time for ETH is 15 secs. Program will adjust the solution itself
- Average Block Time - https://etherscan.io/chart/blocktime

Smart Contract
- An account controlled by the code
- Contract Account:
  - Specific to the network, can't be access cross-network
  - balance - Total ETH the account owns
  - storage - Data Storage for the contract
  - code - Program code for the contract
- External Account:
  - Specific to the user
  - Same across all networks
- Develop Contract Source (Class) from local and deploy to the ETH network as Contract Instance (Object)

Solidity Program Language
- Extension .sol files
- Strongly Typed Language
- How it works
  - Write Contract Definition in .sol
  - Compile using Solidity Compiler
    - Generates Byte Code ready for deployment
    - Geneates Application Binary Interface (ABI)
  - Javascript code ( client code ) interact with Byte Code through ABI

Testing in Remix
- In-browser fake network
- Constructor method will auto

Transaction
- Exchange Transaction
- Smart Contract Transaction
  - To address is null
  - nonce - Network address
  - data - compile bytecode of the contract

Why Transaction
- Any modifications in Blockchain need to trigger the transaction and approval required

How Transaction Works
- Take Time to execute
- Each transaction returns the transaction hash ID
- Take Costs

